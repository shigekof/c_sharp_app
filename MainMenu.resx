<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAkACQAAD/4QCWRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAIdpAAQAAAABAAAATgAAAAAAAACQAAAAAQAAAJAAAAABAAOShgAHAAAAFgAA
        AHigAgAEAAAAAQAAAGSgAwAEAAAAAQAAACMAAAAAUwBjAHIAZQBlAG4AcwBoAG8AdAAAAP/bAEMAAgIC
        AgICAwICAwQDAwMEBQQEBAQFBwUFBQUFBwgHBwcHBwcICAgICAgICAoKCgoKCgsLCwsLDQ0NDQ0NDQ0N
        Df/bAEMBAgICAwMDBgMDBg0JBwkNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0NDQ0NDf/AABEIACMAZAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKC
        CQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImK
        kpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T1
        9vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncA
        AQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RF
        RkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
        tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/3QAEAAf/2gAMAwEAAhEDEQA/
        AP38oprukaNJIwREBZmY4AA6knsBXyv8dPif461O00b4bfs4XNje+MfFl5cWj638l5YeHNPsSov7+4Cl
        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
</value>
  </data>
</root>